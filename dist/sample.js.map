{"mappings":"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","sources":["sample.js","node_modules/@swc/helpers/src/index.js","node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_inherits.js","node_modules/@swc/helpers/src/_set_prototype_of.js","node_modules/@swc/helpers/src/_object_spread.js","node_modules/@swc/helpers/src/_define_property.js","node_modules/@swc/helpers/src/_create_super.js","node_modules/@swc/helpers/src/_is_native_reflect_construct.js","node_modules/@swc/helpers/src/_get_prototype_of.js","node_modules/@swc/helpers/src/_possible_constructor_return.js","node_modules/@swc/helpers/src/_assert_this_initialized.js","node_modules/@swc/helpers/src/_type_of.js","node_modules/westures/dist/index.js","node_modules/westures/dist/core/dist/index.js","node_modules/westures/dist/core/dist/src/Gesture.js","node_modules/westures/dist/core/dist/src/Input.js","node_modules/westures/dist/core/dist/src/PointerData.js","node_modules/westures/dist/core/dist/src/Point2D.js","node_modules/westures/dist/core/dist/src/constants.js","node_modules/westures/dist/core/dist/src/utils.js","node_modules/westures/dist/core/dist/src/Region.js","node_modules/westures/dist/core/dist/src/State.js","node_modules/westures/dist/core/dist/src/Smoothable.js","node_modules/westures/dist/src/Pan.js","node_modules/westures/dist/src/Pinch.js","node_modules/westures/dist/src/Press.js","node_modules/westures/dist/src/Pull.js","node_modules/westures/dist/src/Pivotable.js","node_modules/westures/dist/src/Rotate.js","node_modules/westures/dist/src/Swipe.js","node_modules/westures/dist/src/Swivel.js","node_modules/westures/dist/src/Tap.js","node_modules/westures/dist/src/Track.js"],"sourcesContent":["'use strict';\n\nconst westures = require('westures');\nconst region = new westures.Region();\nconst container = document.querySelector('#container');\n\nconst SIXTY_FPS = 1000 / 60;\nconst FRICTION = 0.95;\nconst MULTI = 7;\nconst LIMIT = 0.1;\nconst MAX_V = 7;\n\nfunction random8Bit() {\n  return Math.floor(Math.random() * 256);\n}\n\nfunction reduce(value) {\n  value *= FRICTION;\n  return (Math.abs(value) < LIMIT) ? 0 : value;\n}\n\n/**\n * Provides an interactable element using westures.\n */\nclass Interactable {\n  constructor(name, color) {\n    this.element = document.createElement('div');\n    this.element.style.backgroundColor = color;\n\n    this.label = document.createElement('h1');\n    this.label.innerText = name;\n\n    this.element.appendChild(this.label);\n    container.appendChild(this.element);\n\n    this.rotation = 0;\n    this.scale = 1;\n    this.x = 0;\n    this.y = 0;\n    this.velocityX = 0;\n    this.velocityY = 0;\n\n    this.animate = false;\n    this.update_fn = this.update.bind(this);\n    this.swipe_interval = null;\n    this.swipe_fn = this.swipeAnimation.bind(this);\n\n    this.setupTracking();\n  }\n\n  /**\n   * Setups up tracking of the interactable element.\n   */\n  setupTracking() {\n    const fns = {\n      end:   (data) => {\n        if (data.active.length == 0) {\n          this.animate = false;\n        }\n      },\n      start: () => {\n        this.animate = true;\n        window.requestAnimationFrame(this.update_fn);\n        clearInterval(this.swipe_interval);\n      },\n    };\n    region.addGesture(new westures.Track(\n      this.element,\n      (data) => fns[data.phase](data),\n      { phases: Object.keys(fns) },\n    ));\n  }\n\n  randomBackground() {\n    const R = random8Bit();\n    const G = random8Bit();\n    const B = random8Bit();\n    this.element.style.backgroundColor = `rgb(${R}, ${G}, ${B})`;\n  }\n\n  addTap(options) {\n    region.addGesture(new westures.Tap(\n      this.element,\n      () => {\n        this.randomBackground();\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addPress(options) {\n    region.addGesture(new westures.Press(\n      this.element,\n      () => {\n        this.randomBackground();\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addRotate(options) {\n    region.addGesture(new westures.Rotate(\n      this.element,\n      (data) => {\n        this.rotation += data.rotation;\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addPan(options) {\n    region.addGesture(new westures.Pan(\n      this.element,\n      (data) => {\n        this.x += data.translation.x;\n        this.y += data.translation.y;\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addSwipe(options) {\n    region.addGesture(new westures.Swipe(\n      this.element,\n      (data) => {\n        const velocity = data.velocity > MAX_V ? MAX_V : data.velocity;\n        this.velocityX = velocity * Math.cos(data.direction) * MULTI;\n        this.velocityY = velocity * Math.sin(data.direction) * MULTI;\n        this.swipe_interval = setInterval(this.swipe_fn, SIXTY_FPS);\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addSwivel(options) {\n    region.addGesture(new westures.Swivel(\n      this.element,\n      (data) => {\n        this.rotation += data.rotation;\n      },\n      {\n        pivotCenter: this.element,\n        ...options,\n      },\n    ));\n    return this;\n  }\n\n  addPinch(options) {\n    region.addGesture(new westures.Pinch(\n      this.element,\n      (data) => {\n        this.scale *= data.scale;\n      },\n      options,\n    ));\n    return this;\n  }\n\n  addPull(options) {\n    region.addGesture(new westures.Pull(\n      this.element,\n      (data) => {\n        this.scale *= data.scale;\n      },\n      {\n        pivotCenter: this.element,\n        ...options,\n      },\n    ));\n    return this;\n  }\n\n  update() {\n    const rotate = `rotate(${this.rotation}rad) `;\n    const translate = `translate(${this.x}px, ${this.y}px) `;\n    const scale = `scale(${this.scale}) `;\n    this.element.style.transform = translate + rotate + scale;\n\n    if (this.animate) {\n      window.requestAnimationFrame(this.update_fn);\n    }\n  }\n\n  swipeAnimation() {\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n    this.velocityX = reduce(this.velocityX);\n    this.velocityY = reduce(this.velocityY);\n    if (this.velocityY === 0 && this.velocityX === 0) {\n      clearInterval(this.swipe_interval);\n    }\n    window.requestAnimationFrame(this.update_fn);\n  }\n}\n\n/* ========================================================================== */\n\nconst NUM_COLOURS = 13;\nconst INTERVAL = Math.floor(360 / NUM_COLOURS);\nconst PALETTE = [];\n\n// Generate a Pastel Rainbow\nfor (let i = 0; i < NUM_COLOURS; i++) {\n  const hue = INTERVAL * i;\n  PALETTE.push(`hsl(${hue}, 100%, 75%)`);\n}\n\nlet cidx = 0;\nfunction nextColour() {\n  return PALETTE[cidx++];\n}\n\n// Basic gestures\nnew Interactable('TAP',    nextColour()).addTap();\nnew Interactable('PAN',    nextColour()).addPan();\nnew Interactable('PINCH',  nextColour()).addPinch();\nnew Interactable('ROTATE', nextColour()).addRotate();\nnew Interactable('SWIPE',  nextColour()).addSwipe();\nnew Interactable('PRESS',  nextColour()).addPress();\nnew Interactable('SWIVEL', nextColour()).addSwivel();\nnew Interactable('PULL',   nextColour()).addPull();\n\n// Mix and match!\n// new Interactable('ROTATE and SWIVEL', 'forestgreen').addRotate().addSwivel();\nnew Interactable(\n  'TAP, PAN, PINCH, SWIPE, and ROTATE\\n(desktop: CTRL to SWIVEL and PULL)',\n  nextColour(),\n).addTap()\n  .addPan({ disableKeys: ['ctrlKey'] })\n  .addPinch()\n  .addRotate()\n  .addSwipe()\n  .addSwivel({ enableKeys: ['ctrlKey'] })\n  .addPull({ enableKeys: ['ctrlKey'] });\nnew Interactable('QUICK DOUBLE TAP', nextColour()).addTap({\n  numTaps: 2,\n});\nnew Interactable('FIVE QUICK TAPS', nextColour()).addTap({\n  maxDelay:  1000,\n  maxRetain: 1000,\n  numTaps:   5,\n});\nnew Interactable('SLOW TAP', nextColour()).addTap({\n  minDelay: 300,\n  maxDelay: 1000,\n});\nnew Interactable('TWO SLOW TAPS', nextColour()).addTap({\n  minDelay:  300,\n  maxDelay:  1000,\n  maxRetain: 2000,\n  numTaps:   2,\n});\n","export { default as applyDecoratedDescriptor } from './_apply_decorated_descriptor';\nexport { default as arrayWithHoles } from './_array_with_holes';\nexport { default as arrayWithoutHoles } from './_array_without_holes';\nexport { default as assertThisInitialized } from './_assert_this_initialized';\nexport { default as asyncGenerator } from './_async_generator';\nexport { default as asyncGeneratorDelegate } from './_async_generator_delegate';\nexport { default as asyncIterator } from './_async_iterator';\nexport { default as asyncToGenerator } from './_async_to_generator';\nexport { default as awaitAsyncGenerator } from './_await_async_generator';\nexport { default as awaitValue } from './_await_value';\nexport { default as classCallCheck } from './_class_call_check';\nexport { default as classNameTDZError } from './_class_name_tdz_error';\nexport { default as classPrivateFieldGet } from './_class_private_field_get';\nexport { default as classPrivateFieldLooseBase } from './_class_private_field_loose_base';\nexport { default as classPrivateFieldSet } from './_class_private_field_set';\nexport { default as classPrivateMethodGet } from './_class_private_method_get';\nexport { default as classPrivateMethodSet } from './_class_private_method_set';\nexport { default as classStaticPrivateFieldSpecGet } from './_class_static_private_field_spec_get';\nexport { default as classStaticPrivateFieldSpecSet } from './_class_static_private_field_spec_set';\nexport { default as construct } from './_construct';\nexport { default as createClass } from './_create_class';\nexport { default as decorate } from './_decorate';\nexport { default as defaults } from './_defaults';\nexport { default as defineEnumerableProperties } from './_define_enumerable_properties';\nexport { default as defineProperty } from './_define_property';\nexport { default as extends } from './_extends';\nexport { default as get } from './_get';\nexport { default as getPrototypeOf } from './_get_prototype_of';\nexport { default as inherits } from './_inherits';\nexport { default as inheritsLoose } from './_inherits_loose';\nexport { default as initializerDefineProperty } from './_initializer_define_property';\nexport { default as initializerWarningHelper } from './_initializer_warning_helper';\nexport { default as _instanceof } from './_instanceof';\nexport { default as interopRequireDefault } from './_interop_require_default';\nexport { default as interopRequireWildcard } from './_interop_require_wildcard';\nexport { default as isNativeFunction } from './_is_native_function';\nexport { default as iterableToArray } from './_iterable_to_array';\nexport { default as iterableToArrayLimit } from './_iterable_to_array_limit';\nexport { default as iterableToArrayLimitLoose } from './_iterable_to_array_limit_loose';\nexport { default as jsx } from './_jsx';\nexport { default as newArrowCheck } from './_new_arrow_check';\nexport { default as nonIterableRest } from './_non_iterable_rest';\nexport { default as nonIterableSpread } from './_non_iterable_spread';\nexport { default as objectSpread } from './_object_spread';\nexport { default as objectWithoutProperties } from './_object_without_properties';\nexport { default as objectWithoutPropertiesLoose } from './_object_without_properties_loose';\nexport { default as possibleConstructorReturn } from './_possible_constructor_return';\nexport { default as readOnlyError } from './_read_only_error';\nexport { default as set } from './_set';\nexport { default as setPrototypeOf } from './_set_prototype_of';\nexport { default as skipFirstGeneratorNext } from './_skip_first_generator_next';\nexport { default as slicedToArray } from './_sliced_to_array';\nexport { default as slicedToArrayLoose } from './_sliced_to_array_loose';\nexport { default as superPropBase } from './_super_prop_base';\nexport { default as taggedTemplateLiteral } from './_tagged_template_literal';\nexport { default as taggedTemplateLiteralLoose } from './_tagged_template_literal_loose';\nexport { default as _throw } from './_throw';\nexport { default as toArray } from './_to_array';\nexport { default as toConsumableArray } from './_to_consumable_array';\nexport { default as toPrimitive } from './_to_primitive';\nexport { default as toPropertyKey } from './_to_property_key';\nexport { default as typeOf } from './_type_of';\nexport { default as wrapAsyncGenerator } from './_wrap_async_generator';\nexport { default as wrapNativeSuper } from './_wrap_native_super';\nexport { default as createSuper } from './_create_super';\nexport { default as isNativeReflectConstruct } from './_is_native_reflect_construct';\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","import setPrototypeOf from './_set_prototype_of';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","import defineProperty from './_define_property';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import _isNativeReflectConstruct from \"./_is_native_reflect_construct\";\nimport _getPrototypeOf from \"./_get_prototype_of\";\nimport _possibleConstructorReturn from './_possible_constructor_return';\n\nexport default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}","export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import assertThisInitialized from './_assert_this_initialized';\nimport _typeof from './_type_of';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","export default function _typeof(obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","/**\n * The API interface for Westures. Defines a number of gestures on top of the\n * engine provided by {@link\n * https://mvanderkamp.github.io/westures-core/index.html|westures-core}.\n *\n * @namespace westures\n */\n\n'use strict';\n\nconst core = require('./core');\n\nconst Pan     = require('./src/Pan.js');\nconst Pinch   = require('./src/Pinch.js');\nconst Press   = require('./src/Press.js');\nconst Pull    = require('./src/Pull.js');\nconst Rotate  = require('./src/Rotate.js');\nconst Swipe   = require('./src/Swipe.js');\nconst Swivel  = require('./src/Swivel.js');\nconst Tap     = require('./src/Tap.js');\nconst Track   = require('./src/Track.js');\n\nmodule.exports = {\n  Pan,\n  Pinch,\n  Press,\n  Pull,\n  Rotate,\n  Swipe,\n  Swivel,\n  Tap,\n  Track,\n  ...core,\n};\n\n/**\n * Here are the return \"types\" of the gestures that are included in this\n * package.\n *\n * @namespace ReturnTypes\n */\n\n/**\n * The base data that is included for all emitted gestures.\n *\n * @typedef {Object} BaseData\n *\n * @property {westures-core.Point2D} centroid - The centroid of the input\n * points.\n * @property {Event} event - The input event which caused the gesture to be\n * recognized.\n * @property {string} phase - 'start', 'move', 'end', or 'cancel'.\n * @property {number} radius - The distance of the furthest input to the\n * centroid.\n * @property {string} type - The name of the gesture as specified by its\n * designer.\n * @property {Element} target - The bound target of the gesture.\n *\n * @memberof ReturnTypes\n */\n\n","/**\n * The global API interface for westures-core. Exposes all classes, constants,\n * and routines used by the package. Use responsibly.\n *\n * @namespace westures-core\n */\n\n'use strict';\n\nconst Gesture = require('./src/Gesture.js');\nconst Input = require('./src/Input.js');\nconst Point2D = require('./src/Point2D.js');\nconst PointerData = require('./src/PointerData.js');\nconst Region = require('./src/Region.js');\nconst Smoothable = require('./src/Smoothable.js');\nconst State = require('./src/State.js');\nconst constants = require('./src/constants.js');\nconst utils = require('./src/utils.js');\n\nmodule.exports = {\n  Gesture,\n  Input,\n  Point2D,\n  PointerData,\n  Region,\n  Smoothable,\n  State,\n  ...constants,\n  ...utils,\n};\n\n","'use strict';\n\nlet g_id = 0;\n\n/**\n * The Gesture class that all gestures inherit from. A custom gesture class will\n * need to override some or all of the four phase \"hooks\": start, move, end, and\n * cancel.\n *\n * @memberof westures-core\n *\n * @param {string} type - The name of the gesture.\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n *    is recognized on the associated element.\n * @param {object} [options] - Generic gesture options\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */\nclass Gesture {\n  constructor(type, element, handler, options = {}) {\n    if (typeof type !== 'string') {\n      throw new TypeError('Gestures require a string type / name');\n    }\n\n    /**\n     * The name of the gesture. (e.g. 'pan' or 'tap' or 'pinch').\n     *\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * The unique identifier for each gesture. This allows for distinctions\n     * across instances of Gestures that are created on the fly (e.g.\n     * gesture-tap-1, gesture-tap-2).\n     *\n     * @type {string}\n     */\n    this.id = `gesture-${this.type}-${g_id++}`;\n\n    /**\n     * The element to which to associate the gesture.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * The function handler to execute when the gesture is recognized on the\n     * associated element.\n     *\n     * @type {Function}\n     */\n    this.handler = handler;\n\n    /**\n     * The options. Can usually be adjusted live, though be careful doing this.\n     *\n     * @type {object}\n     */\n    this.options = { ...Gesture.DEFAULTS, ...options };\n  }\n\n  /**\n   * Determines whether this gesture is enabled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {boolean} true if enabled, false otherwise.\n   */\n  isEnabled(state) {\n    const count = state.active.length;\n    const event = state.event;\n    const { enableKeys, disableKeys, minInputs, maxInputs } = this.options;\n\n    return (minInputs <= count) && (maxInputs >= count) &&\n      (enableKeys.length === 0 || enableKeys.some(k => event[k])) &&\n      !disableKeys.some(k => event[k]);\n  }\n\n  /**\n   * Event hook for the start phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  start() {\n    return null;\n  }\n\n  /**\n   * Event hook for the move phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  move() {\n    return null;\n  }\n\n  /**\n   * Event hook for the end phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  end() {\n    return null;\n  }\n\n  /**\n   * Event hook for when an input is cancelled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  cancel() {\n    return null;\n  }\n\n  /**\n   * Evalutes the given gesture hook, and dispatches any data that is produced\n   * by calling [recognize]{@link westures-core.Gesture#recognize}.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - The current State instance.\n   */\n  evaluateHook(hook, state) {\n    const data = this[hook](state);\n    if (data) {\n      this.recognize(hook, state, data);\n    }\n  }\n\n  /**\n   * Recognize a Gesture by calling the handler. Standardizes the way the\n   * handler is called so that classes extending Gesture can circumvent the\n   * evaluateHook approach but still provide results that have a common format.\n   *\n   * Note that the properties in the \"data\" object will receive priority when\n   * constructing the results. This can be used to override standard results\n   * such as the phase or the centroid.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - current input state.\n   * @param {Object} data - Results data specific to the recognized gesture.\n   */\n  recognize(hook, state, data) {\n    this.handler({\n      centroid: state.centroid,\n      event:    state.event,\n      phase:    hook,\n      type:     this.type,\n      target:   this.element,\n      ...data,\n    });\n  }\n}\n\nGesture.DEFAULTS = {\n  enableKeys:  [],\n  disableKeys: [],\n  minInputs:   1,\n  maxInputs:   Number.MAX_VALUE,\n};\n\nmodule.exports = Gesture;\n\n","'use strict';\n\nconst PointerData = require('./PointerData.js');\nconst { getPropagationPath } = require('./utils.js');\n\n/**\n * Tracks a single input and contains information about the current, previous,\n * and initial events.\n *\n * @memberof westures-core\n *\n * @param {(PointerEvent | MouseEvent | TouchEvent)} event - The input event\n * which will initialize this Input object.\n * @param {number} identifier - The identifier for this input, so that it can\n * be located in subsequent Event objects.\n */\nclass Input {\n  constructor(event, identifier) {\n    const currentData = new PointerData(event, identifier);\n\n    /**\n     * The set of elements along the original event's propagation path at the\n     * time it was dispatched.\n     *\n     * @type {WeakSet.<Element>}\n     */\n    this.initialElements = new WeakSet(getPropagationPath(event));\n\n    /**\n     * Holds the initial data from the mousedown / touchstart / pointerdown that\n     * began this input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.initial = currentData;\n\n    /**\n     * Holds the most current pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.current = currentData;\n\n    /**\n     * Holds the previous pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.previous = currentData;\n\n    /**\n     * The identifier for the pointer / touch / mouse button associated with\n     * this input.\n     *\n     * @type {number}\n     */\n    this.identifier = identifier;\n  }\n\n  /**\n   * The phase of the input: 'start' or 'move' or 'end' or 'cancel'\n   *\n   * @type {string}\n   */\n  get phase() { return this.current.type; }\n\n  /**\n   * The timestamp of the initiating event for this input.\n   *\n   * @type {number}\n   */\n  get startTime() { return this.initial.time; }\n\n  /**\n   * The amount of time elapsed between the start of this input and its latest\n   * event.\n   *\n   * @type {number}\n   */\n  get elapsedTime() { return this.current.time - this.initial.time; }\n\n  /**\n   * @return {number} The distance between the initiating event for this input\n   *    and its current event.\n   */\n  totalDistance() {\n    return this.initial.point.distanceTo(this.current.point);\n  }\n\n  /**\n   * Saves the given raw event in PointerData form as the current data for this\n   * input, pushing the old current data into the previous slot, and tossing\n   * out the old previous data.\n   *\n   * @param {Event} event - The event object to wrap with a PointerData.\n   */\n  update(event) {\n    this.previous = this.current;\n    this.current = new PointerData(event, this.identifier);\n  }\n}\n\nmodule.exports = Input;\n\n","'use strict';\n\nconst Point2D   = require('./Point2D.js');\nconst { PHASE } = require('./constants.js');\n\n/**\n * @private\n * @inner\n * @memberof westures-core.PointerData\n *\n * @return {Event} The Event object which corresponds to the given identifier.\n *    Contains clientX, clientY values.\n */\nfunction getEventObject(event, identifier) {\n  if (event.changedTouches) {\n    return Array.from(event.changedTouches).find(touch => {\n      return touch.identifier === identifier;\n    });\n  }\n  return event;\n}\n\n/**\n * Low-level storage of pointer data based on incoming data from an interaction\n * event.\n *\n * @memberof westures-core\n *\n * @param {Event} event - The event object being wrapped.\n * @param {number} identifier - The index of touch if applicable\n */\nclass PointerData {\n  constructor(event, identifier) {\n    const { clientX, clientY } = getEventObject(event, identifier);\n\n    /**\n     * The original event object.\n     *\n     * @type {Event}\n     */\n    this.event = event;\n\n    /**\n     * The type or 'phase' of this batch of pointer data. 'start' or 'move' or\n     * 'end' or 'cancel'\n     *\n     * @type {string}\n     */\n    this.type = PHASE[event.type];\n\n    /**\n     * The timestamp of the event in milliseconds elapsed since January 1, 1970,\n     * 00:00:00 UTC.\n     *\n     * @type {number}\n     */\n    this.time = Date.now();\n\n    /**\n     * The (x,y) coordinate of the event, wrapped in a Point2D.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.point = new Point2D(clientX, clientY);\n  }\n}\n\nmodule.exports = PointerData;\n\n","'use strict';\n\n/**\n * The Point2D class stores and operates on 2-dimensional points, represented as\n * x and y coordinates.\n *\n * @memberof westures-core\n *\n * @param {number} [ x=0 ] - The x coordinate of the point.\n * @param {number} [ y=0 ] - The y coordinate of the point.\n */\nclass Point2D {\n  constructor(x = 0, y = 0) {\n    /**\n     * The x coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Calculates the angle between this point and the given point.\n   *\n   * @param {!westures-core.Point2D} point - Projected point for calculating the\n   * angle.\n   *\n   * @return {number} Radians along the unit circle where the projected\n   * point lies.\n   */\n  angleTo(point) {\n    return Math.atan2(point.y - this.y, point.x - this.x);\n  }\n\n  /**\n   * Determine the angle from the centroid to each of the points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the angles to.\n   *\n   * @returns {number[]}\n   */\n  anglesTo(points) {\n    return points.map(point => this.angleTo(point));\n  }\n\n  /**\n   * Determine the average distance from this point to the provided array of\n   * points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the average distance to.\n   *\n   * @return {number} The average distance from this point to the provided\n   *    points.\n   */\n  averageDistanceTo(points) {\n    return this.totalDistanceTo(points) / points.length;\n  }\n\n  /**\n   * Clone this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, identical to this point.\n   */\n  clone() {\n    return new Point2D(this.x, this.y);\n  }\n\n  /**\n   * Calculates the distance between two points.\n   *\n   * @param {!westures-core.Point2D} point - Point to which the distance is\n   * calculated.\n   *\n   * @return {number} The distance between the two points, a.k.a. the\n   *    hypoteneuse.\n   */\n  distanceTo(point) {\n    return Math.hypot(point.x - this.x, point.y - this.y);\n  }\n\n  /**\n   * Subtract the given point from this point.\n   *\n   * @param {!westures-core.Point2D} point - Point to subtract from this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the result of (this\n   * - point).\n   */\n  minus(point) {\n    return new Point2D(\n      this.x - point.x,\n      this.y - point.y,\n    );\n  }\n\n  /**\n   * Return the summation of this point to the given point.\n   *\n   * @param {!westures-core.Point2D} point - Point to add to this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the addition of the\n   * two points.\n   */\n  plus(point) {\n    return new Point2D(\n      this.x + point.x,\n      this.y + point.y,\n    );\n  }\n\n  /**\n   * Calculates the total distance from this point to an array of points.\n   *\n   * @param {!westures-core.Point2D[]} points - The array of Point2D objects to\n   *    calculate the total distance to.\n   *\n   * @return {number} The total distance from this point to the provided points.\n   */\n  totalDistanceTo(points) {\n    return points.reduce((d, p) => d + this.distanceTo(p), 0);\n  }\n\n  /**\n   * Calculates the centroid of a list of points.\n   *\n   * @param {westures-core.Point2D[]} points - The array of Point2D objects for\n   * which to calculate the centroid.\n   *\n   * @return {westures-core.Point2D} The centroid of the provided points.\n   */\n  static centroid(points = []) {\n    if (points.length === 0) return null;\n\n    const total = Point2D.sum(points);\n    total.x /= points.length;\n    total.y /= points.length;\n    return total;\n  }\n\n  /**\n   * Calculates the sum of the given points.\n   *\n   * @param {westures-core.Point2D[]} points - The Point2D objects to sum up.\n   *\n   * @return {westures-core.Point2D} A new Point2D representing the sum of the\n   * given points.\n   */\n  static sum(points = []) {\n    return points.reduce(\n      (total, pt) => {\n        total.x += pt.x;\n        total.y += pt.y;\n        return total;\n      },\n      new Point2D(0, 0),\n    );\n  }\n}\n\nmodule.exports = Point2D;\n\n","'use strict';\n\n/**\n * List of events that trigger the cancel phase.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst CANCEL_EVENTS = [\n  'blur',\n  'pointercancel',\n  'touchcancel',\n  'mouseleave',\n];\n\n/**\n * List of keyboard events that trigger a restart.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst KEYBOARD_EVENTS = [\n  'keydown',\n  'keyup',\n];\n\n/**\n * List of mouse events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst MOUSE_EVENTS = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n];\n\n/**\n * List of pointer events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst POINTER_EVENTS = [\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n];\n\n/**\n * List of touch events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst TOUCH_EVENTS = [\n  'touchend',\n  'touchmove',\n  'touchstart',\n];\n\n/**\n * List of potentially state-modifying keys.\n * Entries are: ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst STATE_KEYS = [\n  'altKey',\n  'ctrlKey',\n  'metaKey',\n  'shiftKey',\n];\n\n/**\n * List of the 'key' values on KeyboardEvent objects of the potentially\n * state-modifying keys.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst STATE_KEY_STRINGS = [\n  'Alt',\n  'Control',\n  'Meta',\n  'Shift',\n];\n\n/**\n * The cancel phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst CANCEL = 'cancel';\n\n/**\n * The end phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst END = 'end';\n\n/**\n * The move phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst MOVE = 'move';\n\n/**\n * The start phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst START = 'start';\n\n/**\n * The recognized phases.\n *\n * @memberof westures-core\n * @type {list.<string>}\n */\nconst PHASES = [START, MOVE, END, CANCEL];\n\n/**\n * Object that normalizes the names of window events to be either of type start,\n * move, end, or cancel.\n *\n * @memberof westures-core\n * @type {object}\n */\nconst PHASE = {\n  blur:           CANCEL,\n  pointercancel:  CANCEL,\n  touchcancel:    CANCEL,\n\n  mouseup:       END,\n  pointerup:     END,\n  touchend:      END,\n\n  mousemove:   MOVE,\n  pointermove: MOVE,\n  touchmove:   MOVE,\n\n  mousedown:   START,\n  pointerdown: START,\n  touchstart:  START,\n};\n\nmodule.exports = {\n  CANCEL_EVENTS,\n  KEYBOARD_EVENTS,\n  MOUSE_EVENTS,\n  POINTER_EVENTS,\n  TOUCH_EVENTS,\n\n  STATE_KEYS,\n  STATE_KEY_STRINGS,\n\n  CANCEL,\n  END,\n  MOVE,\n  START,\n\n  PHASE,\n  PHASES,\n};\n\n","'use strict';\n\nconst PI_2   = 2 * Math.PI;\nconst PI_NVE = -Math.PI;\n\n/**\n * Helper function to regulate angular differences, so they don't jump from 0 to\n * 2 * PI or vice versa.\n *\n * @memberof westures-core\n *\n * @param {number} a - Angle in radians.\n * @param {number} b - Angle in radians.\n\n * @return {number} c, given by: c = a - b such that |c| < PI\n */\nfunction angularDifference(a, b) {\n  let diff = a - b;\n  if (diff < PI_NVE) {\n    diff += PI_2;\n  } else if (diff > Math.PI) {\n    diff -= PI_2;\n  }\n  return diff;\n}\n\n/**\n * In case event.composedPath() is not available.\n *\n * @memberof westures-core\n *\n * @param {Event} event\n *\n * @return {Element[]} The elements along the composed path of the event.\n */\nfunction getPropagationPath(event) {\n  if (typeof event.composedPath === 'function') {\n    return event.composedPath();\n  }\n\n  const path = [];\n  for (let node = event.target; node !== document; node = node.parentNode) {\n    path.push(node);\n  }\n  path.push(document);\n  path.push(window);\n\n  return path;\n}\n\n/**\n * Performs a set filter operation.\n *\n * @memberof westures-core\n *\n * @param {Set} set - The set to filter.\n * @param {Function} predicate - Function to test elements of 'set'. Receives\n * one argument: the current set element.\n *\n * @return {Set} Set consisting of elements in 'set' for which 'predicate' is\n * true.\n */\nfunction setFilter(set, predicate) {\n  const result = new Set();\n  set.forEach(element => {\n    if (predicate(element)) {\n      result.add(element);\n    }\n  });\n  return result;\n}\n\n/**\n * Performs a set difference operation.\n *\n * @memberof westures-core\n *\n * @param {Set} left - Base set.\n * @param {Set} right - Set of elements to remove from 'left'.\n *\n * @return {Set} Set consisting of elements in 'left' that are not in\n * 'right'.\n */\nfunction setDifference(left, right) {\n  return setFilter(left, element => !right.has(element));\n}\n\nmodule.exports = {\n  angularDifference,\n  getPropagationPath,\n  setDifference,\n  setFilter,\n};\n\n","'use strict';\n\nconst State = require('./State.js');\nconst {\n  CANCEL_EVENTS,\n  KEYBOARD_EVENTS,\n  MOUSE_EVENTS,\n  POINTER_EVENTS,\n  TOUCH_EVENTS,\n\n  STATE_KEY_STRINGS,\n\n  PHASE,\n\n  CANCEL,\n  END,\n  START,\n} = require('./constants.js');\nconst {\n  setDifference,\n  setFilter,\n} = require('./utils.js');\n\n/**\n * Allows the user to specify the control region which will listen for user\n * input events.\n *\n * @memberof westures-core\n *\n * @param {Element} element=window - The element which should listen to input\n * events.\n * @param {object} [options]\n * @param {boolean} [options.capture=false] - Whether the region uses the\n * capture phase of input events. If false, uses the bubbling phase.\n * @param {boolean} [options.preferPointer=true] - If false, the region listens\n * to mouse/touch events instead of pointer events.\n * @param {boolean} [options.preventDefault=true] - Whether the default\n * browser functionality should be disabled. This option should most likely be\n * ignored. Here there by dragons if set to false.\n * @param {string} [options.touchAction='none'] - Value to set the CSS\n * 'touch-action' property to on elements added to the region.\n */\nclass Region {\n  constructor(element = window, options = {}) {\n    options = { ...Region.DEFAULTS, ...options };\n\n    /**\n     * The list of relations between elements, their gestures, and the handlers.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.gestures = new Set();\n\n    /**\n     * The list of active gestures for the current input session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.activeGestures = new Set();\n\n    /**\n     * The base list of potentially active gestures for the current input\n     * session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.potentialGestures = new Set();\n\n    /**\n     * The element being bound to.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * The user-supplied options for the Region.\n     *\n     * @type {object}\n     */\n    this.options = options;\n\n    /**\n     * The internal state object for a Region.  Keeps track of inputs.\n     *\n     * @type {westures-core.State}\n     */\n    this.state = new State(this.element);\n\n    // Begin operating immediately.\n    this.activate();\n  }\n\n  /**\n   * Activates the region by adding event listeners for all appropriate input\n   * events to the region's element.\n   *\n   * @private\n   */\n  activate() {\n    /*\n     * Listening to both mouse and touch comes with the difficulty that\n     * preventDefault() must be called to prevent both events from iterating\n     * through the system. However I have left it as an option to the end user,\n     * which defaults to calling preventDefault(), in case there's a use-case I\n     * haven't considered or am not aware of.\n     *\n     * It also may be a good idea to keep regions small in large pages.\n     *\n     * See:\n     *  https://www.html5rocks.com/en/mobile/touchandmouse/\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\n     */\n    let eventNames = [];\n    if (this.options.preferPointer && window.PointerEvent) {\n      eventNames = POINTER_EVENTS;\n    } else {\n      eventNames = MOUSE_EVENTS.concat(TOUCH_EVENTS);\n    }\n\n    // Bind detected browser events to the region element.\n    const arbitrate = this.arbitrate.bind(this);\n    eventNames.forEach(eventName => {\n      this.element.addEventListener(eventName, arbitrate, {\n        capture: this.options.capture,\n        once:    false,\n        passive: false,\n      });\n    });\n\n    const cancel = this.cancel.bind(this);\n    CANCEL_EVENTS.forEach(eventName => {\n      window.addEventListener(eventName, cancel);\n    });\n\n    const handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n    KEYBOARD_EVENTS.forEach(eventName => {\n      window.addEventListener(eventName, handleKeyboardEvent);\n    });\n  }\n\n  /**\n   * Handles a cancel event. Resets the state and the active / potential gesture\n   * lists.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  cancel(event) {\n    if (this.options.preventDefault) event.preventDefault();\n    this.state.inputs.forEach(input => {\n      input.update(event);\n    });\n    this.activeGestures.forEach(gesture => {\n      gesture.evaluateHook(CANCEL, this.state);\n    });\n    this.state = new State(this.element);\n    this.resetActiveGestures();\n  }\n\n  /**\n   * Handles a keyboard event, triggering a restart of any gestures that need\n   * it.\n   *\n   * @private\n   * @param {KeyboardEvent} event - The keyboard event.\n   */\n  handleKeyboardEvent(event) {\n    if (STATE_KEY_STRINGS.indexOf(event.key) >= 0) {\n      this.state.event = event;\n      const oldActiveGestures = this.activeGestures;\n      this.setActiveGestures();\n\n      setDifference(oldActiveGestures, this.activeGestures).forEach(gesture => {\n        gesture.evaluateHook(END, this.state);\n      });\n      setDifference(this.activeGestures, oldActiveGestures).forEach(gesture => {\n        gesture.evaluateHook(START, this.state);\n      });\n    }\n  }\n\n  /**\n   * Resets the active gestures.\n   *\n   * @private\n   */\n  resetActiveGestures() {\n    this.potentialGestures = new Set();\n    this.activeGestures = new Set();\n  }\n\n  /**\n   * Selects active gestures from the list of potentially active gestures.\n   *\n   * @private\n   */\n  setActiveGestures() {\n    this.activeGestures = setFilter(this.potentialGestures, gesture => {\n      return gesture.isEnabled(this.state);\n    });\n  }\n\n  /**\n   * Selects the potentially active gestures.\n   *\n   * @private\n   */\n  setPotentialGestures() {\n    const input = this.state.inputs[0];\n    this.potentialGestures = setFilter(this.gestures, gesture => {\n      return input.initialElements.has(gesture.element);\n    });\n  }\n\n  /**\n   * Selects the gestures that are active for the current input sequence.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   * @param {boolean} isInitial - Whether this is an initial contact.\n   */\n  updateActiveGestures(event, isInitial) {\n    if (PHASE[event.type] === START) {\n      if (isInitial) {\n        this.setPotentialGestures();\n      }\n      this.setActiveGestures();\n    }\n  }\n\n  /**\n   * Evaluates whether the current input session has completed.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  pruneActiveGestures(event) {\n    if (PHASE[event.type] === END) {\n      if (this.state.hasNoInputs()) {\n        this.resetActiveGestures();\n      } else {\n        this.setActiveGestures();\n      }\n    }\n  }\n\n  /**\n   * All input events flow through this function. It makes sure that the input\n   * state is maintained, determines which gestures to analyze based on the\n   * initial position of the inputs, calls the relevant gesture hooks, and\n   * dispatches gesture data.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  arbitrate(event) {\n    const isInitial = this.state.hasNoInputs();\n    this.state.updateAllInputs(event);\n    this.updateActiveGestures(event, isInitial);\n\n    if (this.activeGestures.size > 0) {\n      if (this.options.preventDefault) event.preventDefault();\n\n      this.activeGestures.forEach(gesture => {\n        gesture.evaluateHook(PHASE[event.type], this.state);\n      });\n    }\n\n    this.state.clearEndedInputs();\n    this.pruneActiveGestures(event);\n  }\n\n  /**\n   * Adds the given gesture to the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */\n  addGesture(gesture) {\n    gesture.element.style.touchAction = this.options.touchAction;\n    this.gestures.add(gesture);\n  }\n\n  /**\n   * Removes the given gesture from the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */\n  removeGesture(gesture) {\n    this.gestures.delete(gesture);\n    this.potentialGestures.delete(gesture);\n    this.activeGestures.delete(gesture);\n  }\n\n  /**\n   * Retrieves Gestures by their associated element.\n   *\n   * @param {Element} element - The element for which to find gestures.\n   *\n   * @return {westures-core.Gesture[]} Gestures to which the element is bound.\n   */\n  getGesturesByElement(element) {\n    return setFilter(this.gestures, gesture => gesture.element === element);\n  }\n\n  /**\n   * Remove all gestures bound to the given element.\n   *\n   * @param {Element} element - The element to unbind.\n   */\n  removeGesturesByElement(element) {\n    this.getGesturesByElement(element).forEach(g => this.removeGesture(g));\n  }\n}\n\nRegion.DEFAULTS = {\n  capture:        false,\n  preferPointer:  true,\n  preventDefault: true,\n  touchAction:    'none',\n};\n\nmodule.exports = Region;\n","'use strict';\n\nconst {\n  CANCEL,\n  END,\n  MOVE,\n  PHASE,\n  START,\n} = require('./constants.js');\nconst Input     = require('./Input.js');\nconst Point2D   = require('./Point2D.js');\n\nconst symbols = {\n  inputs: Symbol.for('inputs'),\n};\n\n/**\n * Set of helper functions for updating inputs based on type of input.\n * Must be called with a bound 'this', via bind(), or call(), or apply().\n *\n * @private\n * @inner\n * @memberof westure-core.State\n */\nconst update_fns = {\n  TouchEvent: function TouchEvent(event) {\n    Array.from(event.changedTouches).forEach(touch => {\n      this.updateInput(event, touch.identifier);\n    });\n  },\n\n  PointerEvent: function PointerEvent(event) {\n    this.updateInput(event, event.pointerId);\n  },\n\n  MouseEvent: function MouseEvent(event) {\n    if (event.button === 0) {\n      this.updateInput(event, event.button);\n    }\n  },\n};\n\n/**\n * Keeps track of currently active and ending input points on the interactive\n * surface.\n *\n * @memberof westures-core\n *\n * @param {Element} element - The element underpinning the associated Region.\n */\nclass State {\n  constructor(element) {\n    /**\n     * Keep a reference to the element for the associated region.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Keeps track of the current Input objects.\n     *\n     * @alias [@@inputs]\n     * @type {Map.<westures-core.Input>}\n     * @memberof westure-core.State\n     */\n    this[symbols.inputs] = new Map();\n\n    /**\n     * All currently valid inputs, including those that have ended.\n     *\n     * @type {westures-core.Input[]}\n     */\n    this.inputs = [];\n\n    /**\n     * The array of currently active inputs, sourced from the current Input\n     * objects. \"Active\" is defined as not being in the 'end' phase.\n     *\n     * @type {westures-core.Input[]}\n     */\n    this.active = [];\n\n    /**\n     * The array of latest point data for the currently active inputs, sourced\n     * from this.active.\n     *\n     * @type {westures-core.Point2D[]}\n     */\n    this.activePoints = [];\n\n    /**\n     * The centroid of the currently active points.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.centroid = {};\n\n    /**\n     * The latest event that the state processed.\n     *\n     * @type {Event}\n     */\n    this.event = null;\n  }\n\n  /**\n   * Deletes all inputs that are in the 'end' phase.\n   */\n  clearEndedInputs() {\n    this[symbols.inputs].forEach((v, k) => {\n      if (v.phase === 'end') this[symbols.inputs].delete(k);\n    });\n  }\n\n  /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs in the given phase.\n   */\n  getInputsInPhase(phase) {\n    return this.inputs.filter(i => i.phase === phase);\n  }\n\n  /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs <b>not</b> in the given phase.\n   */\n  getInputsNotInPhase(phase) {\n    return this.inputs.filter(i => i.phase !== phase);\n  }\n\n  /**\n   * @return {boolean} True if there are no active inputs. False otherwise.\n   */\n  hasNoInputs() {\n    return this[symbols.inputs].size === 0;\n  }\n\n  /**\n   * Update the input with the given identifier using the given event.\n   *\n   * @private\n   *\n   * @param {Event} event - The event being captured.\n   * @param {number} identifier - The identifier of the input to update.\n   */\n  updateInput(event, identifier) {\n    switch (PHASE[event.type]) {\n    case START:\n      this[symbols.inputs].set(\n        identifier,\n        new Input(event, identifier),\n      );\n      try {\n        this.element.setPointerCapture(identifier);\n      } catch (e) {\n        // NOP: Optional operation failed.\n      }\n      break;\n\n    // All of 'end', 'move', and 'cancel' perform updates, hence the\n    // following fall-throughs\n    case END:\n      try {\n        this.element.releasePointerCapture(identifier);\n      } catch (e) {\n        // NOP: Optional operation failed.\n      }\n    case CANCEL:\n    case MOVE:\n      if (this[symbols.inputs].has(identifier)) {\n        this[symbols.inputs].get(identifier).update(event);\n      }\n      break;\n\n    default:\n      console.warn(`Unrecognized event type: ${event.type}`);\n    }\n  }\n\n  /**\n   * Updates the inputs with new information based upon a new event being fired.\n   *\n   * @private\n   * @param {Event} event - The event being captured.\n   */\n  updateAllInputs(event) {\n    update_fns[event.constructor.name].call(this, event);\n    this.updateFields(event);\n  }\n\n  /**\n   * Updates the convenience fields.\n   *\n   * @private\n   * @param {Event} event - Event with which to update the convenience fields.\n   */\n  updateFields(event) {\n    this.inputs = Array.from(this[symbols.inputs].values());\n    this.active = this.getInputsNotInPhase('end');\n    this.activePoints = this.active.map(i => i.current.point);\n    this.centroid = Point2D.centroid(this.activePoints);\n    this.event = event;\n  }\n}\n\nmodule.exports = State;\n\n","'use strict';\n\nconst cascade = Symbol('cascade');\nconst smooth = Symbol('smooth');\n\n/**\n * Determines whether to apply smoothing. Smoothing is on by default but turned\n * off if either:<br>\n *  1. The user explicitly requests that it be turned off.<br>\n *  2. The active pointer is not \"coarse\".<br>\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia}\n *\n * @inner\n * @memberof westures-core.Smoothable\n *\n * @param {boolean} isRequested - Whether smoothing was requested by the user.\n *\n * @returns {boolean} Whether to apply smoothing.\n */\nfunction smoothingIsApplicable(isRequested) {\n  if (isRequested) {\n    try {\n      return window.matchMedia('(pointer: coarse)').matches;\n    } catch (e) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A Smoothable datatype is one that is capable of smoothing out a series of\n * values as they come in, one at a time, providing a more consistent series. It\n * does this by creating some inertia in the values using a cascading average.\n * (For those who are interested in such things, this effectively means that it\n * provides a practical application of Zeno's Dichotomy).\n *\n * @example\n * const x = new Smoothable({ identity: 1 });\n * const a = x.next(1);   // 1.0\n * const b = x.next(1.2); // 1.1\n * const c = x.next(0.9); // 1.0\n * const d = x.next(0.6); // 0.8\n * const e = x.next(1.2); // 1.0\n * const f = x.next(1.6); // 1.3\n * x.restart();\n * const g = x.next(0);   // 0.5\n *\n * @memberof westures-core\n *\n * @param {Object} [options]\n * @param {boolean} [options.applySmoothing=true] Whether to apply smoothing to\n * the data.\n * @param {*} [options.identity=0] The identity value of this smoothable data.\n */\nclass Smoothable {\n  constructor(options = {}) {\n    const final_options = { ...Smoothable.DEFAULTS, ...options };\n\n    /**\n     * The function through which smoothed emits are passed.\n     *\n     * @method\n     * @param {*} data - The data to emit.\n     *\n     * @return {*} The smoothed out data.\n     */\n    this.next = null;\n    if (smoothingIsApplicable(final_options.applySmoothing)) {\n      this.next = this[smooth].bind(this);\n    } else {\n      this.next = data => data;\n    }\n\n    /**\n     * The \"identity\" value of the data that will be smoothed.\n     *\n     * @type {*}\n     * @default 0\n     */\n    this.identity = final_options.identity;\n\n    /**\n     * The cascading average of outgoing values.\n     *\n     * @memberof westures-core.Smoothable\n     * @alias [@@cascade]\n     * @type {object}\n     */\n    this[cascade] = this.identity;\n  }\n\n  /**\n   * Restart the Smoothable gesture.\n   */\n  restart() {\n    this[cascade] = this.identity;\n  }\n\n  /**\n   * Smooth out the outgoing data.\n   *\n   * @memberof westures-core.Smoothable\n   * @alias [@@smooth]\n   * @param {object} data - The next batch of data to emit.\n   *\n   * @return {?object}\n   */\n  [smooth](data) {\n    const average = this.average(this[cascade], data);\n    this[cascade] = average;\n    return average;\n  }\n\n  /**\n   * Average out two values, as part of the smoothing algorithm. Override this\n   * method if the data being smoothed is not a Number.\n   *\n   * @param {number} a\n   * @param {number} b\n   *\n   * @return {number} The average of 'a' and 'b'\n   */\n  average(a, b) {\n    return (a + b) / 2;\n  }\n}\n\nSmoothable.DEFAULTS = {\n  applySmoothing: true,\n  identity:       0,\n};\n\nmodule.exports = Smoothable;\n\n","/*\n * Contains the Pan class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pan is recognized.\n *\n * @typedef {Object} PanData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D} translation - The change vector from the\n * last emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pan is defined as a normal movement in any direction.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PanData}\n * @see {westures-core.Smoothable}\n * @memberof westures\n *\n * @param {Element} element - The element with which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Pan extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('pan', element, handler, options);\n\n    /**\n     * The previous point location.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.previous = null;\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<westures-core.Point2D>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: new Point2D() });\n    this.outgoing.average = (a, b) => Point2D.centroid([a, b]);\n  }\n\n  /**\n   * Resets the gesture's progress by saving the current centroid of the active\n   * inputs. To be called whenever the number of inputs changes.\n   *\n   * @param {State} state\n   */\n  restart(state) {\n    this.previous = state.centroid;\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const translation = state.centroid.minus(this.previous);\n    this.previous = state.centroid;\n    return { translation: this.outgoing.next(translation) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel(state) {\n    this.restart(state);\n  }\n}\n\nmodule.exports = Pan;\n\n","/*\n * Contains the abstract Pinch class.\n */\n\n'use strict';\n\nconst { Gesture, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pinch is recognized.\n *\n * @typedef {Object} PinchData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n *    the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pinch is defined as two or more inputs moving either together or apart.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PinchData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Pinch extends Gesture {\n  constructor(element, handler, options = {}) {\n    options = { ...Pinch.DEFAULTS, ...options };\n    super('pinch', element, handler, options);\n\n    /**\n     * The previous distance.\n     *\n     * @type {number}\n     */\n    this.previous = 0;\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: 1 });\n  }\n\n  /**\n   * Initializes the gesture progress.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    this.previous = state.centroid.averageDistanceTo(state.activePoints);\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const distance = state.centroid.averageDistanceTo(state.activePoints);\n    const scale = distance / this.previous;\n    this.previous = distance;\n    return { distance, scale: this.outgoing.next(scale) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel(state) {\n    this.restart(state);\n  }\n}\n\nPinch.DEFAULTS = Object.freeze({\n  minInputs: 2,\n});\n\nmodule.exports = Pinch;\n\n","/*\n * Contains the Press class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, MOVE } = require('../core');\n\n/**\n * Data returned when a Press is recognized.\n *\n * @typedef {Object} PressData\n *\n * @property {westures-core.Point2D} centroid - The current centroid of the\n * input points.\n * @property {westures-core.Point2D} initial - The initial centroid of the input\n * points.\n * @property {number} distance - The total movement since initial contact.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Press is defined as one or more input points being held down without\n * moving. Press gestures may be stacked by pressing with additional pointers\n * beyond the minimum, so long as none of the points move or are lifted, a Press\n * will be recognized for each additional pointer.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PressData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.delay=1000] - The delay before emitting, during\n * which time the number of inputs must not go below minInputs.\n * @param {number} [options.tolerance=10] - The tolerance in pixels a user can\n * move and still allow the gesture to emit.\n */\nclass Press extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('press', element, handler, { ...Press.DEFAULTS, ...options });\n  }\n\n  start(state) {\n    const initial = state.centroid;\n    const originalInputs = Array.from(state.active);\n    setTimeout(() => {\n      const inputs = state.active.filter(i => originalInputs.includes(i));\n      if (inputs.length === originalInputs.length) {\n        const centroid = Point2D.centroid(inputs.map(i => i.current.point));\n        const distance = initial.distanceTo(centroid);\n        if (distance <= this.options.tolerance) {\n          this.recognize(MOVE, state, { centroid, distance, initial });\n        }\n      }\n    }, this.options.delay);\n  }\n}\n\nPress.DEFAULTS = Object.freeze({\n  delay:     1000,\n  tolerance: 10,\n});\n\nmodule.exports = Press;\n\n","/*\n * Contains the abstract Pull class.\n */\n\n'use strict';\n\nconst { Smoothable } = require('../core');\nconst Pivotable = require('./Pivotable.js');\n\n/**\n * Data returned when a Pull is recognized.\n *\n * @typedef {Object} PullData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n * the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pull is defined as a single input moving away from or towards a pivot\n * point.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PullData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Pull extends Pivotable {\n  constructor(element, handler, options = {}) {\n    super('pull', element, handler, options);\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: 1 });\n  }\n\n  updatePrevious(state) {\n    this.previous = this.pivot.distanceTo(state.centroid);\n  }\n\n  move(state) {\n    const pivot = this.pivot;\n    const distance = pivot.distanceTo(state.centroid);\n    const scale = distance / this.previous;\n    const { deadzoneRadius } = this.options;\n\n    let rv = null;\n    if (distance > deadzoneRadius && this.previous > deadzoneRadius) {\n      rv = { distance, scale: this.outgoing.next(scale), pivot };\n    }\n\n    /*\n     * Updating the previous distance regardless of emit prevents sudden changes\n     * when the user exits the deadzone circle.\n     */\n    this.previous = distance;\n\n    return rv;\n  }\n}\n\nmodule.exports = Pull;\n\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pivotable is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pivotable is a single input rotating around a fixed point. The fixed point\n * is determined by the input's location at its 'start' phase.\n *\n * @extends westures.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Pivotable extends Gesture {\n  constructor(type = 'pivotable', element, handler, options = {}) {\n    super(type, element, handler, { ...Pivotable.DEFAULTS, ...options });\n\n    /**\n     * The pivot point of the pivotable.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.pivot = null;\n\n    /**\n     * The previous data.\n     *\n     * @type {number}\n     */\n    this.previous = 0;\n\n    /**\n     * The outgoing data.\n     *\n     * @type {westures-core.Smoothable}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  /**\n   * Determine the center point of the given element's bounding client\n   * rectangle.\n   *\n   * @static\n   *\n   * @param {Element} element - The DOM element to analyze.\n   * @return {westures-core.Point2D} - The center of the element's bounding\n   * client rectangle.\n   */\n  static getClientCenter(element) {\n    const rect = element.getBoundingClientRect();\n    return new Point2D(\n      rect.left + (rect.width / 2),\n      rect.top + (rect.height / 2),\n    );\n  }\n\n  /**\n   * Updates the previous data. It will be called during the 'start' and 'end'\n   * phases, and should also be called during the 'move' phase implemented by\n   * the subclass.\n   *\n   * @abstract\n   * @param {State} state - the current input state.\n   */\n  updatePrevious() {\n    throw 'Gestures which extend Pivotable must implement updatePrevious()';\n  }\n\n  /**\n   * Restart the given progress object using the given input object.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    if (this.options.dynamicPivot) {\n      this.pivot = state.centroid;\n      this.previous = 0;\n    } else {\n      this.pivot = Pivotable.getClientCenter(this.element);\n      this.updatePrevious(state);\n    }\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  end(state) {\n    if (state.active.length > 0) {\n      this.restart(state);\n    } else {\n      this.outgoing.restart();\n    }\n  }\n\n  cancel() {\n    this.outgoing.restart();\n  }\n}\n\nPivotable.DEFAULTS = Object.freeze({\n  deadzoneRadius: 15,\n  dynamicPivot:   false,\n});\n\nmodule.exports = Pivotable;\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { angularDifference, Gesture, Smoothable } = require('../core');\n\n/**\n * Data returned when a Rotate is recognized.\n *\n * @typedef {Object} RotateData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Rotate is defined as two inputs moving with a changing angle between them.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.RotateData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Rotate extends Gesture {\n  constructor(element, handler, options = {}) {\n    options = { ...Rotate.DEFAULTS, ...options };\n    super('rotate', element, handler, options);\n\n    /**\n     * Track the previous angles for each input.\n     *\n     * @type {number[]}\n     */\n    this.previousAngles = [];\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  /**\n   * Restart the gesture for a new number of inputs.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    this.previousAngles = state.centroid.anglesTo(state.activePoints);\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const stagedAngles = state.centroid.anglesTo(state.activePoints);\n    const angle = stagedAngles.reduce((total, current, index) => {\n      return total + angularDifference(current, this.previousAngles[index]);\n    }, 0);\n    this.previousAngles = stagedAngles;\n    const rotation = angle / state.activePoints.length;\n    return { rotation: this.outgoing.next(rotation) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel() {\n    this.outgoing.restart();\n  }\n}\n\nRotate.DEFAULTS = Object.freeze({\n  minInputs: 2,\n});\n\nmodule.exports = Rotate;\n\n","/*\n * Contains the Swipe class.\n */\n\n'use strict';\n\nconst { Gesture } = require('../core');\n\nconst PROGRESS_STACK_SIZE = 7;\nconst MS_THRESHOLD = 300;\n\n/**\n * Data returned when a Swipe is recognized.\n *\n * @typedef {Object} SwipeData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} velocity - The velocity of the swipe.\n * @property {number} direction - In radians, the direction of the swipe.\n * @property {westures-core.Point2D} point - The point at which the swipe ended.\n * @property {number} time - The epoch time, in ms, when the swipe ended.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A swipe is defined as input(s) moving in the same direction in an relatively\n * increasing velocity and leaving the screen at some point before it drops\n * below it's escape velocity.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwipeData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */\nclass Swipe extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('swipe', element, handler, options);\n\n    /**\n     * Moves list.\n     *\n     * @type {object[]}\n     */\n    this.moves = [];\n\n    /**\n     * Data to emit when all points have ended.\n     *\n     * @type {ReturnTypes.SwipeData}\n     */\n    this.saved = null;\n  }\n\n  /**\n   * Restart the swipe state for a new numper of inputs.\n   */\n  restart() {\n    this.moves = [];\n    this.saved = null;\n  }\n\n  start() {\n    this.restart();\n  }\n\n  move(state) {\n    this.moves.push({\n      time:  Date.now(),\n      point: state.centroid,\n    });\n\n    if (this.moves.length > PROGRESS_STACK_SIZE) {\n      this.moves.splice(0, this.moves.length - PROGRESS_STACK_SIZE);\n    }\n  }\n\n  end(state) {\n    const result = this.getResult();\n    this.moves = [];\n\n    if (state.active.length > 0) {\n      this.saved = result;\n      return null;\n    }\n\n    this.saved = null;\n    return Swipe.validate(result);\n  }\n\n  cancel() {\n    this.restart();\n  }\n\n  /**\n   * Get the swipe result.\n   *\n   * @returns {?ReturnTypes.SwipeData}\n   */\n  getResult() {\n    if (this.moves.length < PROGRESS_STACK_SIZE) {\n      return this.saved;\n    }\n    const vlim = PROGRESS_STACK_SIZE - 1;\n    const { point, time } = this.moves[vlim];\n    const velocity = Swipe.calc_velocity(this.moves, vlim);\n    const direction = Swipe.calc_angle(this.moves, vlim);\n    const centroid = point;\n    return { point, velocity, direction, time, centroid };\n  }\n\n  /**\n   * Validates that an emit should occur with the given data.\n   *\n   * @static\n   * @param {?ReturnTypes.SwipeData} data\n   * @returns {?ReturnTypes.SwipeData}\n   */\n  static validate(data) {\n    if (data == null) return null;\n    return (Date.now() - data.time > MS_THRESHOLD) ? null : data;\n  }\n\n  /**\n   * Calculates the angle of movement along a series of moves.\n   *\n   * @static\n   * @see {@link https://en.wikipedia.org/wiki/Mean_of_circular_quantities}\n   *\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The angle of the movement.\n   */\n  static calc_angle(moves, vlim) {\n    const point = moves[vlim].point;\n    let sin = 0;\n    let cos = 0;\n    for (let i = 0; i < vlim; ++i) {\n      const angle = moves[i].point.angleTo(point);\n      sin += Math.sin(angle);\n      cos += Math.cos(angle);\n    }\n    sin /= vlim;\n    cos /= vlim;\n    return Math.atan2(sin, cos);\n  }\n\n  /**\n   * Local helper function for calculating the velocity between two timestamped\n   * points.\n   *\n   * @static\n   * @param {object} start\n   * @param {westures-core.Point2D} start.point\n   * @param {number} start.time\n   * @param {object} end\n   * @param {westures-core.Point2D} end.point\n   * @param {number} end.time\n   *\n   * @return {number} velocity from start to end point.\n   */\n  static velocity(start, end) {\n    const distance = end.point.distanceTo(start.point);\n    const time = end.time - start.time + 1;\n    return distance / time;\n  }\n\n  /**\n   * Calculates the veloctiy of movement through a series of moves.\n   *\n   * @static\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The velocity of the moves.\n   */\n  static calc_velocity(moves, vlim) {\n    let max = 0;\n    for (let i = 0; i < vlim; ++i) {\n      const current = Swipe.velocity(moves[i], moves[i + 1]);\n      if (current > max) max = current;\n    }\n    return max;\n  }\n}\n\nmodule.exports = Swipe;\n\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { angularDifference, Smoothable } = require('../core');\nconst Pivotable = require('./Pivotable.js');\n\n/**\n * Data returned when a Swivel is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Swivel is a single input rotating around a fixed point. The fixed point is\n * determined by the input's location at its 'start' phase.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Swivel extends Pivotable {\n  constructor(element, handler, options = {}) {\n    super('swivel', element, handler, options);\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  updatePrevious(state) {\n    this.previous = this.pivot.angleTo(state.centroid);\n  }\n\n  move(state) {\n    const pivot = this.pivot;\n    const angle = pivot.angleTo(state.centroid);\n    const rotation = angularDifference(angle, this.previous);\n\n    let rv = null;\n    if (pivot.distanceTo(state.centroid) > this.options.deadzoneRadius) {\n      rv = { rotation: this.outgoing.next(rotation), pivot };\n    }\n\n    /*\n     * Updating the previous angle regardless of emit prevents sudden flips when\n     * the user exits the deadzone circle.\n     */\n    this.previous = angle;\n\n    return rv;\n  }\n}\n\nmodule.exports = Swivel;\n\n","/*\n * Contains the Tap class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D } = require('../core');\n\n/**\n * Data returned when a Tap is recognized.\n *\n * @typedef {Object} TapData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} x - x coordinate of tap point.\n * @property {number} y - y coordinate of tap point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Tap is defined as a touchstart to touchend event in quick succession.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TapData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.minDelay=0] - The minimum delay between a touchstart\n * and touchend can be configured in milliseconds.\n * @param {number} [options.maxDelay=300] - The maximum delay between a\n * touchstart and touchend can be configured in milliseconds.\n * @param {number} [options.maxRetain=300] - The maximum time after a tap ends\n * before it is discarded can be configured in milliseconds. Useful for\n * multi-tap gestures, to allow things like slow \"double clicks\".\n * @param {number} [options.numTaps=1] - Number of taps to require.\n * @param {number} [options.tolerance=10] - The tolerance in pixels an input can\n * move before it will no longer be considered part of a tap.\n */\nclass Tap extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('tap', element, handler, { ...Tap.DEFAULTS, ...options });\n\n    /**\n     * An array of inputs that have ended recently.\n     *\n     * @type {Input[]}\n     */\n    this.taps = [];\n  }\n\n  end(state) {\n    const now = Date.now();\n    const { minDelay, maxDelay, maxRetain, numTaps, tolerance } = this.options;\n\n    // Save the recently ended inputs as taps.\n    this.taps = this.taps.concat(state.getInputsInPhase('end'))\n      .filter(input => {\n        const elapsed = input.elapsedTime;\n        const tdiff = now - input.current.time;\n        return (\n          elapsed <= maxDelay\n          && elapsed >= minDelay\n          && tdiff <= maxRetain\n        );\n      });\n\n    // Validate the list of taps.\n    if (this.taps.length !== numTaps ||\n      this.taps.some(i => i.totalDistance() > tolerance)) {\n      return null;\n    }\n\n    const centroid = Point2D.centroid(this.taps.map(i => i.current.point));\n    this.taps = []; // Critical! Used taps need to be cleared!\n    return { centroid, ...centroid };\n  }\n}\n\nTap.DEFAULTS = Object.freeze({\n  minDelay:  0,\n  maxDelay:  300,\n  maxRetain: 300,\n  numTaps:   1,\n  tolerance: 10,\n});\n\nmodule.exports = Tap;\n\n","/*\n * Contains the Track class.\n */\n\n'use strict';\n\nconst { Gesture } = require('../core');\n\n/**\n * Data returned when a Track is recognized.\n *\n * @typedef {Object} TrackData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D[]} active - Points currently in 'start' or\n *    'move' phase.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Track gesture forwards a list of active points and their centroid on each\n * of the selected phases.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TrackData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {string[]} [options.phases=[]] Phases to recognize. Entries can be any\n * or all of 'start', 'move', 'end', and 'cancel'.\n */\nclass Track extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('track', element, handler, { ...Track.DEFAULTS, ...options });\n  }\n\n  /**\n   * Filters out the state's data, down to what should be emitted.\n\n   * @param {State} state - current input state.\n   * @return {ReturnTypes.TrackData}\n   */\n  data({ activePoints }) {\n    return { active: activePoints };\n  }\n\n  tracks(phase) {\n    return this.options.phases.includes(phase);\n  }\n\n  start(state) {\n    return this.tracks('start') ? this.data(state) : null;\n  }\n\n  move(state) {\n    return this.tracks('move') ? this.data(state) : null;\n  }\n\n  end(state) {\n    return this.tracks('end') ? this.data(state) : null;\n  }\n\n  cancel(state) {\n    return this.tracks('cancel') ? this.data(state) : null;\n  }\n}\n\nTrack.DEFAULTS = Object.freeze({\n  phases: Object.freeze([]),\n});\n\nmodule.exports = Track;\n\n"],"names":[],"version":3,"file":"sample.js.map"}